/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.guigen.uigen;

import java.awt.CardLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.guigen.uigen//AppUIMain//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "AppUIMainTopComponent",
        iconBase = "org/guigen/uigen/textcur.gif",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "org.guigen.uigen.AppUIMainTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_AppUIMainAction",
        preferredID = "AppUIMainTopComponent"
)
@Messages({
    "CTL_AppUIMainAction=AppUIMain",
    "CTL_AppUIMainTopComponent=AppUIMain Window",
    "HINT_AppUIMainTopComponent=This is a AppUIMain window"
})
public final class AppUIMainTopComponent extends TopComponent {

    public AppUIMainTopComponent() {
        initComponents();
        org.guigen.uigen.AppUIMainTopComponent.appui =this;
        gui=new org.guigen.uigen.Guigen();
        this.add(gui);
        org.guigen.uigen.AppUIMainTopComponent.currentPanel =gui;
        setName(Bundle.CTL_AppUIMainTopComponent());
        setToolTipText(Bundle.HINT_AppUIMainTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new java.awt.MenuBar();
        fiel_menu = new java.awt.Menu();
        Load_info = new java.awt.MenuItem();
        save_info = new java.awt.MenuItem();

        menu.setName(org.openide.util.NbBundle.getMessage(AppUIMainTopComponent.class, "AppUIMainTopComponent.menu.name")); // NOI18N

        fiel_menu.setLabel(org.openide.util.NbBundle.getMessage(AppUIMainTopComponent.class, "AppUIMainTopComponent.fiel_menu.label")); // NOI18N

        Load_info.setLabel(org.openide.util.NbBundle.getMessage(AppUIMainTopComponent.class, "AppUIMainTopComponent.Load_info.label")); // NOI18N
        fiel_menu.add(Load_info);

        save_info.setLabel(org.openide.util.NbBundle.getMessage(AppUIMainTopComponent.class, "AppUIMainTopComponent.save_info.label")); // NOI18N
        fiel_menu.add(save_info);

        menu.add(fiel_menu);

        setLayout(new java.awt.CardLayout());
    }// </editor-fold>//GEN-END:initComponents

    private org.guigen.uigen.Guigen gui;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.MenuItem Load_info;
    private java.awt.Menu fiel_menu;
    private java.awt.MenuBar menu;
    private java.awt.MenuItem save_info;
    // End of variables declaration//GEN-END:variables
    
    public static org.guigen.uigen.AppUIMainTopComponent appui;
    public static java.awt.Component currentPanel;
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    public static void showPanel(java.awt.Panel panel)
    {
         org.guigen.uigen.AppUIMainTopComponent.appui.remove(currentPanel);
         org.guigen.uigen.AppUIMainTopComponent.appui.add(panel);
         
    }
}
